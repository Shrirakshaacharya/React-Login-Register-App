{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Login-Register-App\\\\auth-frontend\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    companyName: '',\n    age: '',\n    dob: '',\n    image: null\n  });\n  const [error, setError] = useState('');\n  const [isRegistered, setIsRegistered] = useState(false);\n  const handleChange = e => {\n    const {\n      id,\n      value,\n      files\n    } = e.target;\n    setFormData({\n      ...formData,\n      [id]: files ? files[0] : value\n    });\n  };\n  const validateForm = () => {\n    const {\n      name,\n      email,\n      password,\n      companyName,\n      age,\n      dob,\n      image\n    } = formData;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    if (!name || !email || !password || !companyName || !age || !dob || !image) {\n      return 'All fields are required.';\n    }\n    if (!emailRegex.test(email)) {\n      return 'Please enter a valid email.';\n    }\n    if (!passwordRegex.test(password)) {\n      return 'Password must be at least 8 characters long, include uppercase, lowercase, a number, and a special character.';\n    }\n    if (isNaN(age) || age < 18 || age > 100) {\n      return 'Age must be a number between 18 and 100.';\n    }\n    if (!['image/png', 'image/jpeg'].includes(image.type)) {\n      return 'Image must be in PNG or JPG format.';\n    }\n    if (image.size > 2 * 1024 * 1024) {\n      return 'Image size must not exceed 2MB.';\n    }\n    return '';\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    const validationError = validateForm();\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n    setError('');\n    try {\n      // Simulate API call\n      const formDataToSend = new FormData();\n      Object.entries(formData).forEach(([key, value]) => {\n        formDataToSend.append(key, value);\n      });\n\n      // Replace with actual API call\n      // await fetch('/api/register', { method: 'POST', body: formDataToSend });\n\n      setIsRegistered(true);\n    } catch (err) {\n      setError('Failed to register. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: isRegistered ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank You for Registering!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We have successfully received your details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const confirmDelete = window.confirm(\"Are you sure you want to delete your account?\");\n          if (confirmDelete) {\n            // Simulate account deletion\n            alert(\"Account has been successfully removed.\");\n            setIsRegistered(false); // Reset to allow re-registration\n          }\n        },\n        className: \"remove-account-btn\",\n        children: \"Remove Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      className: \"register-form\",\n      children: [['name', 'email', 'password', 'companyName', 'age', 'dob'].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: field,\n          children: field.charAt(0).toUpperCase() + field.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: field === 'dob' ? 'date' : field === 'age' ? 'number' : field === 'password' ? 'password' : 'text',\n          id: field,\n          value: formData[field],\n          onChange: handleChange,\n          placeholder: `Enter your ${field}`,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          onChange: handleChange,\n          accept: \"image/png, image/jpeg\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), formData.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Image Preview:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(formData.image),\n          alt: \"Preview\",\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"/PfUn8f+V5vlx5D/I4DjlIj2lzQ=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","email","password","companyName","age","dob","image","error","setError","isRegistered","setIsRegistered","handleChange","e","id","value","files","target","validateForm","emailRegex","passwordRegex","test","isNaN","includes","type","size","handleRegister","preventDefault","validationError","formDataToSend","FormData","Object","entries","forEach","key","append","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","confirmDelete","window","confirm","alert","onSubmit","map","field","htmlFor","charAt","toUpperCase","slice","onChange","placeholder","required","accept","src","URL","createObjectURL","alt","width","_c","$RefreshReg$"],"sources":["D:/React-Login-Register-App/auth-frontend/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    companyName: '',\r\n    age: '',\r\n    dob: '',\r\n    image: null,\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value, files } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [id]: files ? files[0] : value,\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { name, email, password, companyName, age, dob, image } = formData;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n    if (!name || !email || !password || !companyName || !age || !dob || !image) {\r\n      return 'All fields are required.';\r\n    }\r\n    if (!emailRegex.test(email)) {\r\n      return 'Please enter a valid email.';\r\n    }\r\n    if (!passwordRegex.test(password)) {\r\n      return 'Password must be at least 8 characters long, include uppercase, lowercase, a number, and a special character.';\r\n    }\r\n    if (isNaN(age) || age < 18 || age > 100) {\r\n      return 'Age must be a number between 18 and 100.';\r\n    }\r\n    if (!['image/png', 'image/jpeg'].includes(image.type)) {\r\n      return 'Image must be in PNG or JPG format.';\r\n    }\r\n    if (image.size > 2 * 1024 * 1024) {\r\n      return 'Image size must not exceed 2MB.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const validationError = validateForm();\r\n    if (validationError) {\r\n      setError(validationError);\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    try {\r\n      // Simulate API call\r\n      const formDataToSend = new FormData();\r\n      Object.entries(formData).forEach(([key, value]) => {\r\n        formDataToSend.append(key, value);\r\n      });\r\n\r\n      // Replace with actual API call\r\n      // await fetch('/api/register', { method: 'POST', body: formDataToSend });\r\n\r\n      setIsRegistered(true);\r\n    } catch (err) {\r\n      setError('Failed to register. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      {isRegistered ? (\r\n        <div>\r\n          <h2>Thank You for Registering!</h2>\r\n          <p>We have successfully received your details.</p>\r\n          <button\r\n            onClick={() => {\r\n              const confirmDelete = window.confirm(\"Are you sure you want to delete your account?\");\r\n              if (confirmDelete) {\r\n                // Simulate account deletion\r\n                alert(\"Account has been successfully removed.\");\r\n                setIsRegistered(false); // Reset to allow re-registration\r\n              }\r\n            }}\r\n            className=\"remove-account-btn\"\r\n          >\r\n            Remove Account\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleRegister} className=\"register-form\">\r\n          {['name', 'email', 'password', 'companyName', 'age', 'dob'].map((field) => (\r\n            <div className=\"input-group\" key={field}>\r\n              <label htmlFor={field}>{field.charAt(0).toUpperCase() + field.slice(1)}</label>\r\n              <input\r\n                type={field === 'dob' ? 'date' : field === 'age' ? 'number' : field === 'password' ? 'password' : 'text'}\r\n                id={field}\r\n                value={formData[field]}\r\n                onChange={handleChange}\r\n                placeholder={`Enter your ${field}`}\r\n                required\r\n              />\r\n            </div>\r\n          ))}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"image\">Upload Image</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"image\"\r\n              onChange={handleChange}\r\n              accept=\"image/png, image/jpeg\"\r\n              required\r\n            />\r\n          </div>\r\n          {formData.image && (\r\n            <div className=\"image-preview\">\r\n              <p>Image Preview:</p>\r\n              <img src={URL.createObjectURL(formData.image)} alt=\"Preview\" width=\"100\" />\r\n            </div>\r\n          )}\r\n          {error && <p className=\"error\">{error}</p>}\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}